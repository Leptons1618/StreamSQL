services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.2
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      
  kafka:
    image: confluentinc/cp-kafka:7.2.2
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 29092:29092
    expose:
      - 29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-connect:
    image: debezium/connect:1.9
    ports:
      - 8083:8083
    depends_on:
      - kafka
    environment:
      BOOTSTRAP_SERVERS: kafka:29092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: connect_configs
      OFFSET_STORAGE_TOPIC: connect_offsets
      STATUS_STORAGE_TOPIC: connect_statuses
      KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
    
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    depends_on:
      - kafka
      - kafka-connect
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME: FIRST
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS: http://kafka-connect:8083
      DYNAMIC_CONFIG_ENABLED: "true"

  # Dynamic Connector Manager - automatically creates connectors based on .env configuration
  connector-manager:
    image: python:3.9-slim
    depends_on:
      - kafka-connect
    working_dir: /app
    volumes:
      - ./:/app
    env_file:
      - .env
    command: >
      sh -c "
        pip install requests &&
        python connector_manager.py
      "
    restart: "no"

  # Enhanced Database Writer - automatically discovers topics and writes to target database
  enhanced-db-writer:
    image: python:3.9-slim
    depends_on:
      - kafka
      - connector-manager
    working_dir: /app
    volumes:
      - ./:/app
    env_file:
      - .env
    environment:
      KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_BOOTSTRAP_SERVERS}
      CDC_CHANGES_TABLE: ${CDC_CHANGES_TABLE:-dbo.CDCChanges}
    command: >
      sh -c "
        apt-get update && 
        apt-get install -y curl gnupg2 &&
        curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add - &&
        curl https://packages.microsoft.com/config/debian/11/prod.list > /etc/apt/sources.list.d/mssql-release.list &&
        apt-get update && 
        ACCEPT_EULA=Y apt-get install -y msodbcsql17 unixodbc-dev &&
        python -m pip install --upgrade pip && 
        pip install pyodbc pykafka sqlalchemy pandas && 
        sleep 30 &&
        python enhanced_kafka_writer.py
      "
    restart: unless-stopped